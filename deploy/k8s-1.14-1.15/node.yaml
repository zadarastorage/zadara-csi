---
kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: release-csi-zadara-node
  namespace: kube-system
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/name: zadara-csi
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "1.2.2"
    app: zadara-csi
    version: 1.2.2
    release: release
    stage: "production"
    publisher: "zadara"
    provisioner: csi.zadara.com
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: node
      app.kubernetes.io/name: zadara-csi
      app.kubernetes.io/instance: release
      app.kubernetes.io/version: "1.2.2"
      app: zadara-csi
      version: "1.2.2"
      release: release
      stage: "production"
      publisher: "zadara"
      provisioner: csi.zadara.com
  template:
    metadata:
      labels:
        app.kubernetes.io/component: node
        app.kubernetes.io/name: zadara-csi
        app.kubernetes.io/instance: release
        app.kubernetes.io/version: "1.2.2"
        app: zadara-csi
        version: 1.2.2
        release: release
        stage: "production"
        publisher: "zadara"
        provisioner: csi.zadara.com
    spec:
      priorityClassName: system-node-critical
      serviceAccount: release-csi-zadara-node-sa
      hostNetwork: true
      containers:
        - name: csi-node-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0
          imagePullPolicy: "IfNotPresent"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            - "--v=5"
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "rm -rf /registration/csi.zadara.com /registration/csi.zadara.com-reg.sock"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.zadara.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: liveness-probe
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          imagePullPolicy: "IfNotPresent"
          args:
            - --csi-address=/csi/csi.sock
            - --health-port=9808
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: csi-zadara-driver
          image: "zadara/csi-driver:1.2.2"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--hostname=example.zadaravpsa.com"
            - "--secure=true"
            - "--name=csi.zadara.com"
            - "--endpoint=unix:///csi/csi.sock"
          env:
            - name: VPSA_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: release-vpsa-access-token
                  key: access-token
            - name: ISCSIADM_MODE
              value: "rootfs"
            - name: POSTSTART_FINISHED_MARKER
              value: "/run/poststart_finished"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/poststart_actions.sh"]
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: host-root
              mountPath: /host
            - name: iscsi-initiator-name
              mountPath: /etc/iscsi/initiatorname.iscsi
            - name: socket-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
            - name: config-dir
              mountPath: /etc/csi
      volumes:
        - name: host-root
          hostPath:
            path: /
        - name: iscsi-initiator-name
          hostPath:
            path: /etc/iscsi/initiatorname.iscsi
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.zadara.com
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
        - name: config-dir
          configMap:
            name: release-csi-config-map
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-csi-zadara-node-sa
  namespace: kube-system
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/name: zadara-csi
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "1.2.2"
    app: zadara-csi
    version: 1.2.2
    release: release
    stage: "production"
    publisher: "zadara"
    provisioner: csi.zadara.com
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-csi-zadara-node-driver-registrar-role
  namespace: kube-system
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/name: zadara-csi
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "1.2.2"
    app: zadara-csi
    version: 1.2.2
    release: release
    stage: "production"
    publisher: "zadara"
    provisioner: csi.zadara.com
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-csi-zadara-node-driver-registrar-binding
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/name: zadara-csi
    app.kubernetes.io/instance: release
    app.kubernetes.io/version: "1.2.2"
    app: zadara-csi
    version: 1.2.2
    release: release
    stage: "production"
    publisher: "zadara"
    provisioner: csi.zadara.com
subjects:
  - kind: ServiceAccount
    name: release-csi-zadara-node-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: release-csi-zadara-node-driver-registrar-role
  apiGroup: rbac.authorization.k8s.io
---
