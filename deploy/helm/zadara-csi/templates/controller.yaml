---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-controller
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: controller
    {{- include "helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.plugin.controllerReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      {{- include "helm.selector.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        {{- include "helm.labels" . | nindent 8 }}
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: {{ .Release.Name }}-controller-sa
      containers:
        #######################################################################
        - name: csi-provisioner
          image: "{{ .Values.image.provisioner.repository }}:{{ .Values.image.provisioner.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          {{- $snapshotsVersion := include "snapshots.version" . }}
          {{- if eq $snapshotsVersion "v1alpha1" }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--enable-leader-election"
            - "--leader-election-type=leases"
            - "--timeout=180s"
            - "--v=4"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          {{- else }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--timeout=180s"
            - "--http-endpoint=:8080"
            - "--extra-create-metadata"
            - "--v=4"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
          ports:
            - containerPort: 8080
              name: http-endpoint
              protocol: TCP
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        #######################################################################
        - name: csi-attacher
          image: "{{ .Values.image.attacher.repository }}:{{ .Values.image.attacher.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--default-fstype=nfs"
            - "--timeout=10s"
            - "--http-endpoint=:8081"
            - "--v=4"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
          ports:
            - containerPort: 8081
              name: http-endpoint
              protocol: TCP
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        #######################################################################
        - name: csi-snapshotter
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          {{- if or (eq $snapshotsVersion "v1alpha1") (eq $snapshotsVersion "v1beta1") }}
          {{- if eq $snapshotsVersion "v1alpha1" }}
          image: "{{ .Values.image.snapshotter.repository }}:{{ .Values.image.snapshotter.tagV1Alpha1 }}"
          {{- end }}
          {{- if eq $snapshotsVersion "v1beta1" }}
          image: "{{ .Values.image.snapshotter.repository }}:{{ .Values.image.snapshotter.tagV1Beta1 }}"
          {{- end }}
          args:
          - "--csi-address=$(ADDRESS)"
          - "--leader-election"
          - "--timeout=180s"
          - "--v=4"
          {{- else }}
          image: "{{ .Values.image.snapshotter.repository }}:{{ .Values.image.snapshotter.tagV1 }}"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--timeout=180s"
            - "--http-endpoint=:8082"
            - "--v=4"
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
          ports:
            - containerPort: 8082
              name: http-endpoint
              protocol: TCP
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        #######################################################################
        - name: csi-resizer
          image: "{{ .Values.image.resizer.repository }}:{{ .Values.image.resizer.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--timeout=15s"
            - "--http-endpoint=:8083"
            - "--v=4"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          livenessProbe:
            failureThreshold: 1
            httpGet:
              path: /healthz/leader-election
              port: http-endpoint
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 20
          ports:
            - containerPort: 8083
              name: http-endpoint
              protocol: TCP
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        #######################################################################
        - name: liveness-probe
          image: "{{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          args:
            - "--csi-address=/csi/csi.sock"
            - "--health-port={{ .Values.plugin.healthzPort }}"
            - "--probe-timeout=3s"
            - "--v=4"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        #######################################################################
        - name: csi-zadara-driver
          image: "{{ .Values.image.csiDriver.repository }}:{{ .Values.image.csiDriver.tag }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          args:
            - "csi-driver"
            - "--controller=true"
            - "--config=/etc/csi/config.yaml"
            - "--metrics-bind-address=:8084"
            - "--health-probe-bind-address=:8085"
            - "--leader-elect=true"
          env:
            - name: CSI_DRIVER_NAME
              value: "{{ .Values.plugin.provisioner }}"
            - name: CSI_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CSI_GRPC_ENDPOINT
              value: "unix:///csi/csi.sock"
            - name: VSC_VOLUME_ALLOCATOR
              value: "{{ .Values.plugin.allocator }}"
            - name: VSC_MONITOR_INTERVAL
              value: "{{ .Values.vpsa.monitorInterval }}"
            - name: VSC_VPSA_REQUEST_TIMEOUT
              value: "{{ .Values.vpsa.requestTimeout }}"
            - name: GLOBAL_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  key: GLOBAL_ENCRYPTION_KEY
                  name: "{{ .Release.Name }}-encryption-secret"
            - name: TLS_ENABLED
              value: "{{ .Values.vpsa.useTLS }}"
            - name: TLS_SKIP_VERIFICATION
              value: "{{ not .Values.vpsa.verifyTLS }}"
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          ports:
            - name: healthz
              containerPort: {{ .Values.plugin.healthzPort }}
              protocol: TCP
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: config-dir
              mountPath: /etc/csi
            {{- if .Values.customTrustedCertificates }}
            - name: cert-dir
              mountPath: /etc/pki/ca-trust/source/anchors
            {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: config-dir
          configMap:
            name: {{ .Release.Name }}-config-map
        {{- if .Values.customTrustedCertificates }}
        - name: cert-dir
          secret:
        {{- if .Values.customTrustedCertificates.plainText }}
            secretName: {{ .Release.Name }}-custom-tls-cert
        {{- end }}
        {{- if .Values.customTrustedCertificates.existingSecret }}
            secretName: {{ .Values.customTrustedCertificates.existingSecret }}
        {{- end }}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
