
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: vscstorageclasses.storage.zadara.com
spec:
  group: storage.zadara.com
  names:
    kind: VSCStorageClass
    listKind: VSCStorageClassList
    plural: vscstorageclasses
    shortNames:
    - vscsc
    singular: vscstorageclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Status of the VSC Storage Class
      jsonPath: .status.state
      name: Status
      type: string
    - description: VSC Storage Class set as default
      jsonPath: .spec.isDefault
      name: Default
      type: boolean
    - description: Number of VPSAs
      jsonPath: .status.counters.VPSA
      name: Members
      type: integer
    - description: Capacity mode
      jsonPath: .status.capacity.mode
      name: Capacity Mode
      type: string
    - jsonPath: .status.capacity.total
      name: Total
      priority: 1
      type: string
    - jsonPath: .status.capacity.available
      name: Available
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: VSCStorageClass is the Schema for the vscstorageclasses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VSCStorageClassSpec defines the desired state of VSCStorageClass
            properties:
              description:
                description: Human-readable description.
                type: string
              displayName:
                description: Human-readable name.
                type: string
              isDefault:
                description: Default VSCStorageClass will be used when VSCStorageClassName
                  is not explicitly set in StorageClass `parameters`. This works similar
                  to how you can omit storageClassName in PVC definition.
                type: boolean
              volumeFlags:
                description: VolumeFlags are used when creating new Volumes.
                properties:
                  compress:
                    description: Enable data compression (all-flash VPSA required)
                    type: boolean
                  dedupe:
                    description: Enable data deduplication (all-flash VPSA required)
                    type: boolean
                  encrypt:
                    description: Enable data encryption
                    type: boolean
                  extra:
                    additionalProperties:
                      type: string
                    description: Additional Volume flags. See "Create Volume" in https://vpsa-api.zadarastorage.com/#volumes
                    type: object
                required:
                - compress
                - dedupe
                - encrypt
                type: object
            type: object
          status:
            description: VSCStorageClassStatus defines the observed state of VSCStorageClass
            properties:
              capacity:
                description: Capacity aggregates capacity of all member VPSAs.
                properties:
                  available:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Available physical capacity of all Pools of all member
                      VPSAs.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  mode:
                    description: 'Capacity mode: "normal", "alert", "protected" or
                      "emergency". Capacity mode of theVSCStorageClass is the worst
                      of the capacity modes of member VPSAs.'
                    type: string
                  total:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Total physical capacity of all Pools of all member
                      VPSAs.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                required:
                - available
                - total
                type: object
              counters:
                description: Counters aggregate counters of all member VPSAs.
                properties:
                  VPSA:
                    description: Number of member VPSAs
                    type: integer
                  pools:
                    description: Number of VPSA Pools of all member VPSAs.
                    type: integer
                  snapshots:
                    description: Number of VPSA Snapshots of all member VPSAs.
                    type: integer
                  volumes:
                    description: Number of VPSA Volumes of all member VPSAs.
                    type: integer
                required:
                - VPSA
                - pools
                - snapshots
                - volumes
                type: object
              state:
                description: "Status of the VSCStorageClass \t`Creating`: Exists in
                  DB. \t`Ready`:    Ready for volume provisioning. \t`Failed`:   VUnhealthy,
                  typically because of failed VPSA which are members of this VSCStorageClass.
                  \t`Deleting`: VSCStorageClass is being deleted."
                enum:
                - Creating
                - Ready
                - Failed
                - Deleting
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
