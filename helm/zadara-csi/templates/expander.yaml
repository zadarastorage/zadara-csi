---
{{- if .Values.plugin.autoExpandSupport }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-csi-autoexpand-sync
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: expander
    {{- include "helm.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.plugin.autoExpandSupport.schedule }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  # Running Job of this CronJob will prevent new Jobs from starting
  concurrencyPolicy: Forbid
  # Do not start the Job if it misses scheduled time by startingDeadlineSeconds for any reason.
  # Optimally should be close to the interval of schedule.
  startingDeadlineSeconds: 1200
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: expander
        {{- include "helm.labels" . | nindent 8 }}
    spec:
      # If Pod of the Job failed: Deadline Exceed (activeDeadlineSeconds), or Client errors,
      # it will run again up to backoffLimit times.
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/component: expander
            {{- include "helm.labels" . | nindent 12 }}
        spec:
          # Let Job controller manage Pod restarts
          restartPolicy: Never
          # Pod will be killed, if not completed in activeDeadlineSeconds
          activeDeadlineSeconds: 60
          serviceAccountName: {{ .Release.Name }}-csi-zadara-expander-sa
          containers:
            - name: csi-zadara-expander
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: "{{ .Values.image.pullPolicy }}"
              command:
                - "expander"
                - "--hostname={{ .Values.vpsa.url }}"
                - "--secure={{ .Values.vpsa.https }}"
              env:
                - name: VPSA_ACCESS_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Release.Name }}-vpsa-access-token
                      key: access-token
              volumeMounts:
                - name: config-dir
                  mountPath: /etc/csi
          volumes:
            - name: config-dir
              configMap:
                name: {{ .Release.Name }}-csi-config-map
{{ end -}}
---
{{- if .Values.plugin.autoExpandSupport }}
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-csi-zadara-expander-sa
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/component: expander
    {{- include "helm.labels" . | nindent 4 }}
{{ end -}}
---
{{- if .Values.plugin.autoExpandSupport }}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-csi-zadara-expander
  labels:
    app.kubernetes.io/component: expander
    {{- include "helm.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "update"]
{{ end -}}
---
{{- if .Values.plugin.autoExpandSupport }}
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-csi-expander-role
  labels:
    app.kubernetes.io/component: expander
    {{- include "helm.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-csi-zadara-expander-sa
    namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-csi-zadara-expander
  apiGroup: rbac.authorization.k8s.io
{{ end -}}
